type Candidate {
    id: String!
    name: String!
    dob: String!
    policy: String!
    bioLink: String!
    imageURL: String!
    votedCount: Int!
}

type CandidateVoteUpdated {
    id: String!
    votedCount: Int!
}

type Query {
    """
    Return all candidates.
    """
    candidates: [Candidate!]!
    """
    Return candidate with same id.
    """
    candidate(id: String!): Candidate!
}

type Mutation {
    """
    In order to call vote you have to provide Header Authorization:{IDCARD}

    For example Authorization:1234567890123
    """
    vote(id: String!): Boolean! @validIDCard
    """
    Open election.
    """
    open: Boolean!
    """
    Close election.
    """
    close: Boolean!
}

type Subscription {
    """
    Return CandidateVoteUpdated when someone call vote mutation.
    """
    voteUpdated: CandidateVoteUpdated!
}


directive @validIDCard on FIELD_DEFINITION

scalar Time